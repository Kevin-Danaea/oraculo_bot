services:
  # ðŸ§  Brain Service - AnÃ¡lisis TÃ©cnico con TA-Lib
  - type: web
    name: oraculo-brain
    env: python
    plan: starter
    buildCommand: |
      # Instalar dependencias del sistema para TA-Lib
      apt-get update && apt-get install -y gcc g++ wget build-essential
      # Descargar e instalar TA-Lib desde el cÃ³digo fuente
      wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
      tar -xzf ta-lib-0.4.0-src.tar.gz
      cd ta-lib/
      ./configure --prefix=/usr
      make
      make install
      cd ..
      rm -rf ta-lib ta-lib-0.4.0-src.tar.gz
      ldconfig
      # Actualizar pip y instalar dependencias Python
      pip install --upgrade pip setuptools wheel
      pip install -r services/brain/requirements.txt
    startCommand: cd services/brain && python app/main.py
    envVars:
      - key: PYTHON_VERSION
        value: 3.10.0
      - key: BRAIN_PORT
        value: 8001
      - key: BRAIN_ANALYSIS_INTERVAL
        value: 3600
      - key: BRAIN_ANALYSIS_TIMEFRAME
        value: 4h
      - key: BRAIN_ANALYSIS_DAYS
        value: 40
      - key: BRAIN_LOG_LEVEL
        value: INFO
      - key: BRAIN_DEBUG
        value: false
      - key: BRAIN_DEV_MODE
        value: false
      - key: PYTHONPATH
        value: /opt/render/project/src/services/brain:/opt/render/project/src/shared
      # Base de datos Neon
      - key: DATABASE_URL
        sync: false
      # Binance API
      - key: BINANCE_API_KEY
        sync: false
      - key: BINANCE_API_SECRET
        sync: false
      # Telegram Bot
      - key: TELEGRAM_BOT_TOKEN
        sync: false
      - key: TELEGRAM_CHAT_ID
        sync: false

  # ðŸ“Š Grid Service - Trading Automatizado
  - type: web
    name: oraculo-grid
    env: python
    plan: starter
    buildCommand: pip install -r services/grid/requirements.txt
    startCommand: cd services/grid && python app/main.py
    envVars:
      - key: PYTHON_VERSION
        value: 3.10.0
      - key: GRID_PORT
        value: 8002
      - key: GRID_LOG_LEVEL
        value: INFO
      - key: GRID_DEBUG
        value: false
      - key: GRID_DEV_MODE
        value: false
      - key: PYTHONPATH
        value: /opt/render/project/src/services/grid:/opt/render/project/src/shared
      - key: TRADING_MODE
        value: sandbox
      - key: MONITORING_INTERVAL_HOURS
        value: 1
      # Base de datos Neon
      - key: DATABASE_URL
        sync: false
      # Binance API
      - key: BINANCE_API_KEY
        sync: false
      - key: BINANCE_API_SECRET
        sync: false
      # Paper Trading API
      - key: PAPER_TRADING_API_KEY
        sync: false
      - key: PAPER_TRADING_SECRET_KEY
        sync: false
      # Telegram Bot
      - key: TELEGRAM_BOT_TOKEN
        sync: false
      - key: TELEGRAM_CHAT_ID
        sync: false

  # ðŸ“° News Service - AnÃ¡lisis de Noticias
  - type: web
    name: oraculo-news
    env: python
    plan: starter
    buildCommand: pip install -r services/news/requirements.txt
    startCommand: cd services/news && python app/main.py
    envVars:
      - key: PYTHON_VERSION
        value: 3.10.0
      - key: NEWS_PORT
        value: 8003
      - key: NEWS_LOG_LEVEL
        value: INFO
      - key: NEWS_DEBUG
        value: false
      - key: NEWS_DEV_MODE
        value: false
      - key: PYTHONPATH
        value: /opt/render/project/src/services/news:/opt/render/project/src/shared
      - key: NEWS_COLLECTION_INTERVAL
        value: 3600
      - key: SENTIMENT_ANALYSIS_INTERVAL
        value: 1800
      # Base de datos Neon
      - key: DATABASE_URL
        sync: false
      # Reddit API
      - key: REDDIT_CLIENT_ID
        sync: false
      - key: REDDIT_CLIENT_SECRET
        sync: false
      - key: REDDIT_USER_AGENT
        sync: false
      # Google Gemini API
      - key: GOOGLE_API_KEY
        sync: false
      # Telegram Bot
      - key: TELEGRAM_BOT_TOKEN
        sync: false
      - key: TELEGRAM_CHAT_ID
        sync: false

  # ðŸ”¥ Hype Service - DetecciÃ³n de Tendencias
  - type: web
    name: oraculo-hype
    env: python
    plan: starter
    buildCommand: pip install -r services/hype/requirements.txt
    startCommand: cd services/hype && python app/main.py
    envVars:
      - key: PYTHON_VERSION
        value: 3.10.0
      - key: HYPE_PORT
        value: 8004
      - key: HYPE_LOG_LEVEL
        value: INFO
      - key: HYPE_DEBUG
        value: false
      - key: HYPE_DEV_MODE
        value: false
      - key: PYTHONPATH
        value: /opt/render/project/src/services/hype:/opt/render/project/src/shared
      - key: HYPE_SCAN_INTERVAL
        value: 300
      - key: HYPE_ALERT_THRESHOLD
        value: 10
      # Base de datos Neon
      - key: DATABASE_URL
        sync: false
      # Reddit API
      - key: REDDIT_CLIENT_ID
        sync: false
      - key: REDDIT_CLIENT_SECRET
        sync: false
      - key: REDDIT_USER_AGENT
        sync: false
      # Telegram Bot
      - key: TELEGRAM_BOT_TOKEN
        sync: false
      - key: TELEGRAM_CHAT_ID
        sync: false 